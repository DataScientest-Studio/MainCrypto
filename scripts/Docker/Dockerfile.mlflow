# Use an official Python runtime as a parent image
FROM python:3.12.4

#Install pip
RUN pip install --upgrade pip

# Set the working directory in the container
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app


# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Make port 5000 available to the world outside this container
EXPOSE 5000

# Run the MLflow tracking server when the container launches
CMD ["mlflow", "server", "--host", "0.0.0.0", "--port", "5000"]





# Installing base packages
RUN apk add --no-cache --virtual .build-deps gcc libc-dev make libffi-dev \

    && pip install --no-cache-dir uvicorn gunicorn fastapi python-jose[cryptography] passlib python-multipart pytest httpx email-validator slowapi\

    && apk del .build-deps gcc libc-dev make libffi-dev

# Copy the start.sh script to the container
COPY ./start.sh /start.sh
RUN chmod +x /start.sh

# Copy the gunicorn_conf.py script to the container
COPY ./gunicorn_conf.py /gunicorn_conf.py

# Copy the start-reload.sh script to the container
COPY ./start-reload.sh /start-reload.sh
RUN chmod +x /start-reload.sh

# Copy the app directory to the container
COPY ./app /app
WORKDIR /app/

# Set the PYTHONPATH environment variable to the root directory and app directory
ENV PYTHONPATH=/app

# Expose the port 3000
EXPOSE 3000

# Run the start script, it will check for an /app/prestart.sh script (e.g. for migrations)
# And then will start Gunicorn with Uvicorn
CMD ["/start-reload.sh"] 
# we can use it with start.sh or with start-reload.sh for hot reloading